package com.zeno.quanxueclient.db.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.zeno.quanxueclient.bean.BookBean;
import com.zeno.quanxueclient.bean.BookContentBean;
import com.zeno.quanxueclient.bean.BookContentsBean;
import com.zeno.quanxueclient.bean.Category;
import com.zeno.quanxueclient.bean.NoteBean;

import com.zeno.quanxueclient.db.gen.BookBeanDao;
import com.zeno.quanxueclient.db.gen.BookContentBeanDao;
import com.zeno.quanxueclient.db.gen.BookContentsBeanDao;
import com.zeno.quanxueclient.db.gen.CategoryDao;
import com.zeno.quanxueclient.db.gen.NoteBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bookBeanDaoConfig;
    private final DaoConfig bookContentBeanDaoConfig;
    private final DaoConfig bookContentsBeanDaoConfig;
    private final DaoConfig categoryDaoConfig;
    private final DaoConfig noteBeanDaoConfig;

    private final BookBeanDao bookBeanDao;
    private final BookContentBeanDao bookContentBeanDao;
    private final BookContentsBeanDao bookContentsBeanDao;
    private final CategoryDao categoryDao;
    private final NoteBeanDao noteBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bookBeanDaoConfig = daoConfigMap.get(BookBeanDao.class).clone();
        bookBeanDaoConfig.initIdentityScope(type);

        bookContentBeanDaoConfig = daoConfigMap.get(BookContentBeanDao.class).clone();
        bookContentBeanDaoConfig.initIdentityScope(type);

        bookContentsBeanDaoConfig = daoConfigMap.get(BookContentsBeanDao.class).clone();
        bookContentsBeanDaoConfig.initIdentityScope(type);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        noteBeanDaoConfig = daoConfigMap.get(NoteBeanDao.class).clone();
        noteBeanDaoConfig.initIdentityScope(type);

        bookBeanDao = new BookBeanDao(bookBeanDaoConfig, this);
        bookContentBeanDao = new BookContentBeanDao(bookContentBeanDaoConfig, this);
        bookContentsBeanDao = new BookContentsBeanDao(bookContentsBeanDaoConfig, this);
        categoryDao = new CategoryDao(categoryDaoConfig, this);
        noteBeanDao = new NoteBeanDao(noteBeanDaoConfig, this);

        registerDao(BookBean.class, bookBeanDao);
        registerDao(BookContentBean.class, bookContentBeanDao);
        registerDao(BookContentsBean.class, bookContentsBeanDao);
        registerDao(Category.class, categoryDao);
        registerDao(NoteBean.class, noteBeanDao);
    }
    
    public void clear() {
        bookBeanDaoConfig.clearIdentityScope();
        bookContentBeanDaoConfig.clearIdentityScope();
        bookContentsBeanDaoConfig.clearIdentityScope();
        categoryDaoConfig.clearIdentityScope();
        noteBeanDaoConfig.clearIdentityScope();
    }

    public BookBeanDao getBookBeanDao() {
        return bookBeanDao;
    }

    public BookContentBeanDao getBookContentBeanDao() {
        return bookContentBeanDao;
    }

    public BookContentsBeanDao getBookContentsBeanDao() {
        return bookContentsBeanDao;
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public NoteBeanDao getNoteBeanDao() {
        return noteBeanDao;
    }

}
